//
// Generated By: dol2asm
// Translation Unit: d_a_obj_rock
//

#include "rel/d/a/obj/d_a_obj_rock/d_a_obj_rock.h"

#include "f_op/f_op_actor.h"
#include "f_op/f_op_actor_mng.h"
#include "d/com/d_com_inf_game.h"
#include "d/cc/d_cc_d.h"
#include "dol2asm.h"
#include "SSystem/SComponent/c_math.h"

#define NONMATCHING 0

//
// Types:
//

struct rock_ss {
    /* 80CBE5A4 */ ~rock_ss();
    /* 80CBE678 */ rock_ss();

    /* 0x00 */ J3DModel* mpModel;
    /* 0x04 */ cXyz mPos;
    /* 0x10 */ cXyz mScale;
    /* 0x1C */ f32 field_0x1c;
    /* 0x20 */ s16 mRot;
    /* 0x24 */ dCcD_Sph field_0x24;
    /* 0x15C */ s8 mActive;
}; // Size: 0x160

STATIC_ASSERT(sizeof(rock_ss) == 0x160);

class obj_rock_class : public fopAc_ac_c {
public:
    int set_pos_check(int);
    
    /* 0x568  */ request_of_phase_process_class mPhaseReq;
    /* 0x570  */ u8 field_0x570;
    /* 0x571  */ u8 field_0x571;
    /* 0x572  */ u8 field_0x572;
    /* 0x574  */ s16 field_0x574;
    /* 0x578  */ rock_ss mRockArr[0x10];
    /* 0x1B78 */ s32 mCount;
    /* 0x1B7C */ dCcD_Stts mStts;
    /* 0x1BB9 */ u8 field_0x1bb8;
    /* 0x1BB9 */ bool mInitialized;
}; // Size: 0x1BBC

STATIC_ASSERT(sizeof(obj_rock_class) == 0x1BBC);

//
// Forward References:
//

extern "C" static int daObj_Rock_Draw__FP14obj_rock_class();
extern "C" static int daObj_Rock_Execute__FP14obj_rock_class();
extern "C" static bool daObj_Rock_IsDelete__FP14obj_rock_class();
extern "C" static int daObj_Rock_Delete__FP14obj_rock_class();
extern "C" static int useHeapInit__FP10fopAc_ac_c();
extern "C" static void set_pos_check__FP14obj_rock_classi();
extern "C" static int daObj_Rock_Create__FP10fopAc_ac_c();
extern "C" void __dt__7rock_ssFv();
extern "C" void __ct__7rock_ssFv();
extern "C" void __dt__8cM3dGSphFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" extern char const* const d_a_obj_rock__stringBase0;

//
// External References:
//

extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void addSimpleModel__14dComIfG_play_cFP12J3DModelDataiUc();
extern "C" void removeSimpleModel__14dComIfG_play_cFP12J3DModelDatai();
extern "C" void entrySimpleModel__14dComIfG_play_cFP8J3DModeli();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void __dt__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void cM_initRnd2__Fiii();
extern "C" void cM_rndF2__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
extern "C" void SetC__8cM3dGSphFRC4cXyz();
extern "C" void SetR__8cM3dGSphFf();
extern "C" void MtxTrans__FfffUc();
extern "C" void MtxPosition__FP4cXyzP4cXyz();
extern "C" void MtxPush__Fv();
extern "C" void MtxPull__Fv();
extern "C" void __dl__FPv();
extern "C" void __construct_array();
extern "C" void _savegpr_23();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _restgpr_23();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" u8 now__14mDoMtx_stack_c[48];

//
// Declarations:
//

/* 80CBDC98-80CBDD20 000078 0088+00 1/0 0/0 0/0 .text            daObj_Rock_Draw__FP14obj_rock_class
 */
static int daObj_Rock_Draw(obj_rock_class* i_this) {
    int room = fopAcM_GetRoomNo(i_this);
    rock_ss* rock = i_this->mRockArr;

    for(int i = 0; i < i_this->mCount; i++, rock++) {
        if (rock->mActive) {
            dComIfGp_entrySimpleModel(rock->mpModel, room);
        }
    }

    return TRUE;
}

/* ############################################################################################## */
/* 80CBE7A4-80CBE7A8 000000 0004+00 3/3 0/0 0/0 .rodata          @3814 */
#if !NONMATCHING
SECTION_RODATA static f32 const lit_3814 = 100.0f;
COMPILER_STRIP_GATE(0x80CBE7A4, &lit_3814);
#endif

/* 80CBDD20-80CBDE48 000100 0128+00 2/1 0/0 0/0 .text daObj_Rock_Execute__FP14obj_rock_class */
#if NONMATCHING
static int daObj_Rock_Execute(obj_rock_class* i_this) {
    if (i_this->field_0x574 == 0) {
        rock_ss* rock = i_this->mRockArr;
        for(int i = 0; i < i_this->mCount; i++, rock++) {
            if (rock->mActive) {
                mDoMtx_trans(mDoMtx_stack_c::get(), rock->mPos.x, rock->mPos.y + rock->field_0x1c, rock->mPos.z);
                mDoMtx_YrotM(mDoMtx_stack_c::get(), rock->mRot);
                mDoMtx_stack_c::scaleM(rock->mScale.x, rock->mScale.y, rock->mScale.z);

                rock->mpModel->i_setBaseTRMtx(mDoMtx_stack_c::get());

                rock->field_0x24.SetC(rock->mPos);
                rock->field_0x24.SetR(rock->mScale.x * 100.0f);
            }
        }
        i_this->field_0x574 = 1;
    } else {
        rock_ss* rock = i_this->mRockArr;
        for(int i = 0; i < i_this->mCount; i++, rock++) {
            dComIfG_Ccsp2().Set(&rock->field_0x24);
        }
    }
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int daObj_Rock_Execute(obj_rock_class* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rock/d_a_obj_rock/daObj_Rock_Execute__FP14obj_rock_class.s"
}
#pragma pop
#endif

/* 80CBDE48-80CBDE50 000228 0008+00 1/0 0/0 0/0 .text daObj_Rock_IsDelete__FP14obj_rock_class */
static bool daObj_Rock_IsDelete(obj_rock_class* param_0) {
    return true;
}

/* ############################################################################################## */
/* 80CBE7E4-80CBE7E4 000040 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#if !NONMATCHING
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80CBE7E4 = "Obj_rock";
#pragma pop
#endif

/* 80CBDE50-80CBDED8 000230 0088+00 1/0 0/0 0/0 .text daObj_Rock_Delete__FP14obj_rock_class */
static int daObj_Rock_Delete(obj_rock_class* i_this) {
    if (i_this->mInitialized) {
        J3DModelData* model_data = (J3DModelData*)dComIfG_getObjectRes("Obj_rock", 3);
        dComIfGp_removeSimpleModel(model_data, fopAcM_GetRoomNo(i_this));
    }
    dComIfG_resDelete(&i_this->mPhaseReq, "Obj_rock");
    return TRUE;
}

/* 80CBDED8-80CBDF84 0002B8 00AC+00 1/1 0/0 0/0 .text            useHeapInit__FP10fopAc_ac_c */
static int useHeapInit(fopAc_ac_c* i_this) {
    obj_rock_class* a_this = static_cast<obj_rock_class*>(i_this);

    J3DModelData* model_data = (J3DModelData*)dComIfG_getObjectRes("Obj_rock", 3);

    for (int i = 0; i < a_this->mCount; i++) {
        a_this->mRockArr[i].mpModel = mDoExt_J3DModel__create(model_data, 0x20000, 0x11000084);
        if (a_this->mRockArr[i].mpModel == NULL) {
            return 0;
        }
    }

    return 1;
}

/* ############################################################################################## */
/* 80CBE7A8-80CBE7AC 000004 0004+00 0/2 0/0 0/0 .rodata          @3894 */
#if !NONMATCHING
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3894[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x80CBE7A8, &lit_3894);
#pragma pop

/* 80CBE7AC-80CBE7B4 000008 0008+00 0/1 0/0 0/0 .rodata          @3895 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3895[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80CBE7AC, &lit_3895);
#pragma pop

/* 80CBE7B4-80CBE7BC 000010 0008+00 0/1 0/0 0/0 .rodata          @3896 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3896[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80CBE7B4, &lit_3896);
#pragma pop

/* 80CBE7BC-80CBE7C4 000018 0008+00 0/1 0/0 0/0 .rodata          @3897 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3897[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80CBE7BC, &lit_3897);
#pragma pop

/* 80CBE7C4-80CBE7C8 000020 0004+00 0/1 0/0 0/0 .rodata          @3898 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3898 = 200.0f;
COMPILER_STRIP_GATE(0x80CBE7C4, &lit_3898);
#pragma pop
#endif

/* 80CBDF84-80CBE138 000364 01B4+00 1/1 0/0 0/0 .text            set_pos_check__FP14obj_rock_classi
 */
#if NONMATCHING
static int set_pos_check(obj_rock_class* i_this, int index) {
    for (int i = 0; i < index; i++) {
        cXyz dir = i_this->mRockArr[i].mPos - i_this->mRockArr[index].mPos;
        if (dir.abs() < 200.0f) {
            return FALSE;
        }
    }

    return TRUE;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int set_pos_check(obj_rock_class* param_0, int index) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rock/d_a_obj_rock/set_pos_check__FP14obj_rock_classi.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80CBE7C8-80CBE7CC 000024 0004+00 0/1 0/0 0/0 .rodata          @4012 */
#if !NONMATCHING
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4012 = 65536.0f;
COMPILER_STRIP_GATE(0x80CBE7C8, &lit_4012);
#pragma pop

/* 80CBE7CC-80CBE7D0 000028 0004+00 0/1 0/0 0/0 .rodata          @4013 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4013 = 0.5f;
COMPILER_STRIP_GATE(0x80CBE7CC, &lit_4013);
#pragma pop

/* 80CBE7D0-80CBE7D4 00002C 0004+00 0/1 0/0 0/0 .rodata          @4014 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4014 = 2.0f / 5.0f;
COMPILER_STRIP_GATE(0x80CBE7D0, &lit_4014);
#pragma pop

/* 80CBE7D4-80CBE7D8 000030 0004+00 0/1 0/0 0/0 .rodata          @4015 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4015 = 70.0f;
COMPILER_STRIP_GATE(0x80CBE7D4, &lit_4015);
#pragma pop

/* 80CBE7D8-80CBE7DC 000034 0004+00 0/1 0/0 0/0 .rodata          @4016 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4016 = 1.0f;
COMPILER_STRIP_GATE(0x80CBE7D8, &lit_4016);
#pragma pop

/* 80CBE7DC-80CBE7E4 000038 0008+00 0/1 0/0 0/0 .rodata          @4018 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_4018[8] = {
    0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80CBE7DC, &lit_4018);
#pragma pop
#endif

/* 80CBE7F0-80CBE830 000000 0040+00 1/1 0/0 0/0 .data            cc_sph_src$3926 */
static dCcD_SrcSph cc_sph_src = {
    {
        {0x0, {{0x0, 0x0, 0x0}, {0xd8fbfdff, 0x11}, 0x79}}, // mObj
        {dCcD_SE_NONE, 0x0, 0x0, 0x0, 0x0}, // mGObjAt
        {dCcD_SE_METAL, 0x2, 0x0, 0x0, 0x3}, // mGObjTg
        {0x0}, // mGObjCo
    }, // mObjInf
    {
        {{0.0f, 0.0f, 0.0f}, 40.0f} // mSph
    } // mSphAttr
};

/* 80CBE138-80CBE5A4 000518 046C+00 1/0 0/0 0/0 .text            daObj_Rock_Create__FP10fopAc_ac_c
 */
#if NONMATCHING
static int daObj_Rock_Create(fopAc_ac_c* i_this) {
    obj_rock_class* a_this = static_cast<obj_rock_class*>(i_this);
    fopAcM_SetupActor(a_this, obj_rock_class);

    cPhs__Step step = (cPhs__Step)dComIfG_resLoad(&a_this->mPhaseReq, "Obj_rock");
    if (step == cPhs_COMPLEATE_e) {
        a_this->field_0x570 = fopAcM_GetParam(a_this);
        a_this->field_0x571 = fopAcM_GetParamBit(a_this, 8, 8);
        a_this->field_0x572 = fopAcM_GetParamBit(a_this, 16, 8);

        if (a_this->field_0x572 == 0xFF) {
            a_this->field_0x572 = 0;
        }

        a_this->mCount = a_this->field_0x570 + 1;
        if (a_this->mCount > 0x10) {
            a_this->mCount = 0x10;
        }
        
        if (!fopAcM_entrySolidHeap(a_this, (heapCallbackFunc)useHeapInit, 0x4B000)) {
            return cPhs_ERROR_e;
        } else {
            MtxTrans(a_this->current.pos.x, a_this->current.pos.y, a_this->current.pos.z, 0);

            cXyz init_pos(0.0f, 0.0f, 0.0f);
            dBgS_GndChk gnd_chk;
            dBgS_ObjGndChk_Spl obj_gnd_chk;

            int count = 0;
            cM_initRnd2(0x10, 0x7b, 0x50);

            cXyz pos = a_this->current.pos;
            pos.y += 100.0f;
            obj_gnd_chk.SetPos((Vec*)&pos);

            f32 gnd_height = dComIfG_Bgsp().GroundCross(&obj_gnd_chk);
            for (int i = 0; i < a_this->mCount; i++) {
                MtxPush();
                mDoMtx_YrotM(*calc_mtx, cM_rndF2(65536.0f));
                MtxPosition(&init_pos, &a_this->mRockArr[i].mPos);
                MtxPull();

                pos.x = a_this->mRockArr[i].mPos.x;
                pos.y = a_this->mRockArr[i].mPos.y + 100.0f;
                pos.z = a_this->mRockArr[i].mPos.z;
                gnd_chk.SetPos((Vec*)&pos);
                
                a_this->mRockArr[i].mPos.y = dComIfG_Bgsp().GroundCross(&gnd_chk);

                if (a_this->set_pos_check(i) && a_this->mRockArr[i].mPos.y < gnd_height) {
                    a_this->mRockArr[i].mActive = 1;
                    a_this->mRockArr[i].mScale.x = cM_rndF2(0.4f) + 0.5f;
                    a_this->mRockArr[i].mScale.z = cM_rndF2(0.4f) + 0.5f;
                    a_this->mRockArr[i].mScale.y = cM_rndF2(0.4f) + 0.5f;
                    a_this->mRockArr[i].field_0x1c = -cM_rndF2(70.0f);
                    a_this->mRockArr[i].mRot = cM_rndF2(65536.0f);

                } else {
                    count++;
                    i--;
                    if (count > 10000) {
                        return cPhs_ERROR_e;
                    }
                }

                init_pos.z = cM_rndF2(1.0f);
                init_pos.z = 1.0f - (init_pos.z * init_pos.z);
                init_pos.z *= 100.0f * a_this->field_0x571;
            }

            a_this->mStts.Init(0xff, 0, a_this);

            for (int i = 0; i < a_this->mCount; i++) {
                a_this->mRockArr[i].field_0x24.Set(cc_sph_src);
                a_this->mRockArr[i].field_0x24.SetStts(&a_this->mStts);
            }

            daObj_Rock_Execute(a_this);

            J3DModelData* model_data = (J3DModelData*)dComIfG_getObjectRes("Obj_rock", 3);
            dComIfGp_addSimpleModel(model_data, fopAcM_GetRoomNo(a_this), 0);

            a_this->mInitialized = 1;
        }
    }

    return step;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int daObj_Rock_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rock/d_a_obj_rock/daObj_Rock_Create__FP10fopAc_ac_c.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80CBE830-80CBE850 -00001 0020+00 1/0 0/0 0/0 .data            l_daObj_Rock_Method */
SECTION_DATA static void* l_daObj_Rock_Method[8] = {
    (void*)daObj_Rock_Create__FP10fopAc_ac_c,
    (void*)daObj_Rock_Delete__FP14obj_rock_class,
    (void*)daObj_Rock_Execute__FP14obj_rock_class,
    (void*)daObj_Rock_IsDelete__FP14obj_rock_class,
    (void*)daObj_Rock_Draw__FP14obj_rock_class,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80CBE850-80CBE880 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_OBJ_ROCK */
SECTION_DATA extern void* g_profile_OBJ_ROCK[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x01180000, (void*)&g_fpcLf_Method,
    (void*)0x00001BBC, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x02C60000, (void*)&l_daObj_Rock_Method,
    (void*)0x00040000, (void*)0x000E0000,
};

#if !NONMATCHING
/* 80CBE880-80CBE88C 000090 000C+00 3/3 0/0 0/0 .data            __vt__8cM3dGAab */
SECTION_DATA extern void* __vt__8cM3dGAab[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};

/* 80CBE88C-80CBE898 00009C 000C+00 3/3 0/0 0/0 .data            __vt__8cM3dGSph */
SECTION_DATA extern void* __vt__8cM3dGSph[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGSphFv,
};
#endif

/* 80CBE5A4-80CBE678 000984 00D4+00 1/1 0/0 0/0 .text            __dt__7rock_ssFv */
#if NONMATCHING
rock_ss::~rock_ss() {}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm rock_ss::~rock_ss() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rock/d_a_obj_rock/__dt__7rock_ssFv.s"
}
#pragma pop
#endif

/* 80CBE678-80CBE70C 000A58 0094+00 1/1 0/0 0/0 .text            __ct__7rock_ssFv */
#if NONMATCHING
rock_ss::rock_ss() {}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm rock_ss::rock_ss() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rock/d_a_obj_rock/__ct__7rock_ssFv.s"
}
#pragma pop
#endif

#if !NONMATCHING
/* 80CBE70C-80CBE754 000AEC 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGSphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm cM3dGSph::~cM3dGSph() {
extern "C" asm void __dt__8cM3dGSphFv() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rock/d_a_obj_rock/__dt__8cM3dGSphFv.s"
}
#pragma pop

/* 80CBE754-80CBE79C 000B34 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm cM3dGAab::~cM3dGAab() {
extern "C" asm void __dt__8cM3dGAabFv() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rock/d_a_obj_rock/__dt__8cM3dGAabFv.s"
}
#pragma pop
#endif

/* 80CBE7E4-80CBE7E4 000040 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
