//
// Generated By: dol2asm
// Translation Unit: d_a_obj_lv3Candle
//

#include "rel/d/a/obj/d_a_obj_lv3Candle/d_a_obj_lv3Candle.h"

#include "d/com/d_com_inf_game.h"
#include "dol2asm.h"

#define NONMATCHING 0

//
// Forward References:
//

extern "C" static void daLv3Candle_Draw__FP13daLv3Candle_c();
extern "C" static void daLv3Candle_Execute__FP13daLv3Candle_c();
extern "C" static void daLv3Candle_Delete__FP13daLv3Candle_c();
extern "C" static void daLv3Candle_Create__FP10fopAc_ac_c();

#if !NONMATCHING
extern "C" void __ct__17daLv3Candle_HIO_cFv();
extern "C" void __dt__14mDoHIO_entry_cFv();
extern "C" void setBaseMtx__13daLv3Candle_cFv();
extern "C" void CreateHeap__13daLv3Candle_cFv();
extern "C" int create__13daLv3Candle_cFv();
extern "C" void __dt__8cM3dGSphFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" int createHeapCallBack__13daLv3Candle_cFP10fopAc_ac_c();
extern "C" void lightInit__13daLv3Candle_cFv();
extern "C" void pointLightProc__13daLv3Candle_cFv();
extern "C" void Execute__13daLv3Candle_cFv();
extern "C" void Draw__13daLv3Candle_cFv();
extern "C" void Delete__13daLv3Candle_cFv();
extern "C" void __dt__17daLv3Candle_HIO_cFv();
extern "C" void __sinit_d_a_obj_lv3Candle_cpp();
extern "C" u8 const mCcDObjInfo__13daLv3Candle_c[48];
extern "C" u8 mCcDSph__13daLv3Candle_c[64];
extern "C" extern char const* const d_a_obj_lv3Candle__stringBase0;
#endif

//
// External References:
//
#if !NONMATCHING
extern "C" void mDoMtx_ZXYrotS__FPA4_fsss();
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void setSimple__13dPa_control_cFUsPC4cXyzPC12dKy_tevstr_cUcRC8_GXColorRC8_GXColorif();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
extern "C" void GetTgHitObjSe__12dCcD_GObjInfFv();
extern "C" void getHitSeID__12dCcD_GObjInfFUci();
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void dKy_plight_cut__FP15LIGHT_INFLUENCE();
extern "C" void dKy_BossLight_set__FP4cXyzP8_GXColorfUc();
extern "C" void GetAc__8cCcD_ObjFv();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void SetC__8cM3dGSphFRC4cXyz();
extern "C" void SetR__8cM3dGSphFf();
extern "C" void cLib_addCalc__FPfffff();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void deleteObject__14Z2SoundObjBaseFv();
extern "C" void startCollisionSE__14Z2SoundObjBaseFUlUlP14Z2SoundObjBase();
extern "C" void __ct__16Z2SoundObjSimpleFv();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" void __register_global_object();
extern "C" void __dl__FPv();
#endif

//
// Declarations:
//

/* 80C57ACC-80C57AF0 0000EC 0024+00 1/1 0/0 0/0 .text            __ct__17daLv3Candle_HIO_cFv */
daLv3Candle_HIO_c::daLv3Candle_HIO_c() {
    field_0x04 = 0x1e;
}

static daLv3Candle_HIO_c l_HIO;

dCcD_SrcSph daLv3Candle_c::mCcDSph = {
    daLv3Candle_c::mCcDObjInfo,
    {{{0.0f, 0.0f, 0.0f}, 0.0f}}
};

/* 80C58630-80C58638 -00001 0008+00 3/3 0/0 0/0 .data            l_resNameIdx */
static char* l_resNameIdx[] = {
    "L3candl",
    "L3candl2"
};

/* 80C58638-80C58658 -00001 0020+00 1/0 0/0 0/0 .data            l_daLv3Candle_Method */
static actor_method_class l_daLv3Candle_Method = {
    (process_method_func)daLv3Candle_Create__FP10fopAc_ac_c,
    (process_method_func)daLv3Candle_Delete__FP13daLv3Candle_c,
    (process_method_func)daLv3Candle_Execute__FP13daLv3Candle_c,
    NULL,
    (process_method_func)daLv3Candle_Draw__FP13daLv3Candle_c,
};

/* 80C58658-80C58688 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_Obj_Lv3Candle */
extern actor_process_profile_definition g_profile_Obj_Lv3Candle = {
    fpcLy_CURRENT_e,         // mLayerID
    7,                       // mListID
    fpcPi_CURRENT_e,         // mListPrio
    PROC_Obj_Lv3Candle,      // mProcName
    &g_fpcLf_Method.mBase,   // sub_method
    sizeof(daLv3Candle_c),   // mSize
    0,                       // mSizeOther
    0,                       // mParameters
    &g_fopAc_Method.base,    // sub_method
    620,                     // mPriority
    &l_daLv3Candle_Method,   // sub_method
    0x60000,                 // mStatus
    fopAc_ACTOR_e,           // mActorType
    fopAc_CULLBOX_CUSTOM_e,  // cullType
};

#if !NONMATCHING
/* 80C58688-80C58694 000098 000C+00 2/2 0/0 0/0 .data            __vt__8cM3dGSph */
SECTION_DATA extern void* __vt__8cM3dGSph[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGSphFv,
};

/* 80C58694-80C586A0 0000A4 000C+00 2/2 0/0 0/0 .data            __vt__8cM3dGAab */
SECTION_DATA extern void* __vt__8cM3dGAab[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};
#endif

/* 80C57B38-80C57BC0 000158 0088+00 2/2 0/0 0/0 .text            setBaseMtx__13daLv3Candle_cFv */
void daLv3Candle_c::setBaseMtx() {
    mDoMtx_stack_c::transS(current.pos.x, current.pos.y, current.pos.z);
    mDoMtx_stack_c::ZXYrotM(current.angle.x, current.angle.y, current.angle.z);
    mpModel->setBaseScale(scale);
    mpModel->i_setBaseTRMtx(mDoMtx_stack_c::get());
}

/* ############################################################################################## */
/* 80C58564-80C58594 000000 0030+00 5/5 0/0 0/0 .rodata          mCcDObjInfo__13daLv3Candle_c */
dCcD_SrcGObjInf const daLv3Candle_c::mCcDObjInfo = { 
    {
        0, {
            {0x200, 0, 0x13},
            {0xd8fbfdff, 0x1f},
            {0x79}
        }
    },
    {1, 0, 0, 0, 0},
    {0xa, 0, 0, 0, 6},
    {0},
};

/* 80C58594-80C5859C 000030 0008+00 1/1 0/0 0/0 .rodata          l_bmdIdx */
static u32 const l_bmdIdx[] = { 0x03, 0x03 };

/* 80C57BC0-80C57C40 0001E0 0080+00 1/1 0/0 0/0 .text            CreateHeap__13daLv3Candle_cFv */
int daLv3Candle_c::CreateHeap() {
    J3DModelData* model_data = (J3DModelData*)dComIfG_getObjectRes(l_resNameIdx[mType], l_bmdIdx[mType]);
    mpModel = mDoExt_J3DModel__create(model_data, 0x80000, 0x11000084);

    if (mpModel == NULL) {
        return FALSE;
    }

    return TRUE;
}

#if !NONMATCHING
/* ############################################################################################## */
/* 80C5859C-80C585A0 000038 0004+00 0/3 0/0 0/0 .rodata          @3753 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3753[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x80C5859C, &lit_3753);
#pragma pop

/* 80C585A0-80C585A4 00003C 0004+00 0/1 0/0 0/0 .rodata          @3754 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3754 = 20.0f;
COMPILER_STRIP_GATE(0x80C585A0, &lit_3754);
#pragma pop

/* 80C585A4-80C585A8 000040 0004+00 0/1 0/0 0/0 .rodata          @3755 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3755 = 125.0f;
COMPILER_STRIP_GATE(0x80C585A4, &lit_3755);
#pragma pop

/* 80C585A8-80C585AC 000044 0004+00 0/2 0/0 0/0 .rodata          @3756 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3756 = 200.0f;
COMPILER_STRIP_GATE(0x80C585A8, &lit_3756);
#pragma pop
#endif

/* 80C57C40-80C57EDC 000260 029C+00 1/1 0/0 0/0 .text            create__13daLv3Candle_cFv */
#if NONMATCHING
int daLv3Candle_c::create() {
    fopAcM_SetupActor(this, daLv3Candle_c);

    mType = getType();
    if (mType == 0xff) {
        mType = 0;
    }

    cPhs__Step step = (cPhs__Step)dComIfG_resLoad(&mPhaseReq, l_resNameIdx[mType]);
    if (step == cPhs_COMPLEATE_e) {
        if (!fopAcM_entrySolidHeap(this, createHeapCallBack, 0x900)) {
            return cPhs_ERROR_e;
        } else {
            setBaseMtx();
            fopAcM_SetMtx(this, mpModel->getBaseTRMtx());
            fopAcM_setCullSizeBox2(this, mpModel->getModelData());

            mStts.Init(0xff, 0xff, this);
            mSph.Set(mCcDSph);
            mSph.SetStts(&mStts);
            mTorchPos = current.pos;

            if (mType == 0) {
                cXyz v(0.0f, 20.0f, 125.0f);
                mDoMtx_stack_c::ZXYrotS(shape_angle.x, shape_angle.y, shape_angle.z);
                mDoMtx_stack_c::multVec(&v, &v);
                mTorchPos += v;
            } else {
                mTorchPos.y -= 200.0f;
            }

            mIsLit = getSwBit();
            if (mIsLit == 0xff) {
                mIsLit = 0;
            }

            lightInit();

            eyePos = mTorchPos;
            mSound.init(&current.pos, 1);
            mTgHit = 0;
        }
    }

    return step;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daLv3Candle_c::create() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Candle/d_a_obj_lv3Candle/create__13daLv3Candle_cFv.s"
}
#pragma pop
#endif

#if !NONMATCHING
/* 80C57EDC-80C57F24 0004FC 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGSphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm cM3dGSph::~cM3dGSph() {
extern "C" asm void __dt__8cM3dGSphFv() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Candle/d_a_obj_lv3Candle/__dt__8cM3dGSphFv.s"
}
#pragma pop

/* 80C57F24-80C57F6C 000544 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm cM3dGAab::~cM3dGAab() {
extern "C" asm void __dt__8cM3dGAabFv() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Candle/d_a_obj_lv3Candle/__dt__8cM3dGAabFv.s"
}
#pragma pop
#endif

/* 80C57F6C-80C57F8C 00058C 0020+00 1/1 0/0 0/0 .text
 * createHeapCallBack__13daLv3Candle_cFP10fopAc_ac_c            */
int daLv3Candle_c::createHeapCallBack(fopAc_ac_c* i_this) {
    return static_cast<daLv3Candle_c*>(i_this)->CreateHeap();
}

#if !NONMATCHING
/* ############################################################################################## */
/* 80C585AC-80C585B0 000048 0004+00 0/1 0/0 0/0 .rodata          @3846 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3846 = 10.0f;
COMPILER_STRIP_GATE(0x80C585AC, &lit_3846);
#pragma pop

/* 80C585B0-80C585B4 00004C 0004+00 0/1 0/0 0/0 .rodata          @3847 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3847 = 500.0f;
COMPILER_STRIP_GATE(0x80C585B0, &lit_3847);
#pragma pop

/* 80C585B4-80C585B8 000050 0004+00 0/3 0/0 0/0 .rodata          @3848 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3848 = 1.0f;
COMPILER_STRIP_GATE(0x80C585B4, &lit_3848);
#pragma pop
#endif

/* 80C57F8C-80C58018 0005AC 008C+00 1/1 0/0 0/0 .text            lightInit__13daLv3Candle_cFv */
#if NONMATCHING
void daLv3Candle_c::lightInit() {
    mLightPos = mTorchPos;
    mLightPos.y += 10.0f;

    if (mIsLit) {
        mLight.mPosition = mLightPos;
        mLight.mColor.r = 188;
        mLight.mColor.g = 102;
        mLight.mColor.b = 66;
        mLight.mPow = 500.0f;
        mLight.mFluctuation = 1.0f;
        return;
    }

    mIntensity = 0.0f;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daLv3Candle_c::lightInit() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Candle/d_a_obj_lv3Candle/lightInit__13daLv3Candle_cFv.s"
}
#pragma pop
#endif

#if !NONMATCHING
/* ############################################################################################## */
/* 80C585B8-80C585BC 000054 0004+00 0/1 0/0 0/0 .rodata          @3866 */
#pragma push
#pragma force_active on
SECTION_RODATA static u32 const lit_3866 = 0xBC6642FF;
COMPILER_STRIP_GATE(0x80C585B8, &lit_3866);
#pragma pop

/* 80C585BC-80C585C0 000058 0004+00 0/1 0/0 0/0 .rodata          @3871 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3871 = 0.5f;
COMPILER_STRIP_GATE(0x80C585BC, &lit_3871);
#pragma pop

/* 80C585C0-80C585C4 00005C 0004+00 0/1 0/0 0/0 .rodata          @3872 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3872 = 1.0f / 10.0f;
COMPILER_STRIP_GATE(0x80C585C0, &lit_3872);
#pragma pop

/* 80C585C4-80C585C8 000060 0004+00 0/1 0/0 0/0 .rodata          @3873 */
#pragma push
#pragma force_active on
SECTION_RODATA static u32 const lit_3873 = 0x38D1B717;
COMPILER_STRIP_GATE(0x80C585C4, &lit_3873);
#pragma pop

/* 80C585C8-80C585CC 000064 0004+00 0/1 0/0 0/0 .rodata          @3874 */
#pragma push
#pragma force_active on
SECTION_RODATA static u32 const lit_3874 = 0x358637BD;
COMPILER_STRIP_GATE(0x80C585C8, &lit_3874);
#pragma pop
#endif

/* 80C58018-80C580A0 000638 0088+00 1/1 0/0 0/0 .text            pointLightProc__13daLv3Candle_cFv
 */
#if NONMATCHING
void daLv3Candle_c::pointLightProc() {
    if (mIsLit == 0) {
        GXColor color = { 188, 102, 66, 255 };
        cLib_addCalc(&mIntensity, 1.0f, 0.5f, 0.1f, 0.0001f);

        if (mIntensity >= 0.000001f) {
            dKy_BossLight_set(&mLightPos, &color, mIntensity, 0);
        }
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daLv3Candle_c::pointLightProc() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Candle/d_a_obj_lv3Candle/pointLightProc__13daLv3Candle_cFv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80C585CC-80C585D0 000068 0004+00 0/1 0/0 0/0 .rodata          @3922 */
#if !NONMATCHING
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3922 = -1.0f;
COMPILER_STRIP_GATE(0x80C585CC, &lit_3922);
#pragma pop

/* 80C585D0-80C585D4 00006C 0004+00 0/1 0/0 0/0 .rodata          @3923 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3923 = 90.0f;
COMPILER_STRIP_GATE(0x80C585D0, &lit_3923);
#pragma pop

/* 80C585D4-80C585D8 000070 0004+00 0/1 0/0 0/0 .rodata          @3924 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3924 = 70.0f;
COMPILER_STRIP_GATE(0x80C585D4, &lit_3924);
#pragma pop

/* 80C585D8-80C585DC 000074 0004+00 0/1 0/0 0/0 .rodata          @3925 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3925 = 60.0f;
COMPILER_STRIP_GATE(0x80C585D8, &lit_3925);
#pragma pop
#endif

/* 80C580A0-80C582FC 0006C0 025C+00 1/1 0/0 0/0 .text            Execute__13daLv3Candle_cFv */
#if NONMATCHING
int daLv3Candle_c::Execute() {
    dComIfGp_particle_setSimple(0x100, &mTorchPos, 0xff, g_whiteColor, g_whiteColor, 0, 0.0f);
    dComIfGp_particle_setSimple(0x101, &mTorchPos, 0xff, g_whiteColor, g_whiteColor, 0, 0.0f);
    dComIfGp_particle_setSimple(0x103, &mTorchPos, 0xff, g_whiteColor, g_whiteColor, 0, 0.0f);
    
    i_mDoAud_seStartLevel(0x80018, &mTorchPos, 0, dComIfGp_getReverb(fopAcM_GetRoomNo(this)));

    if (mSph.ChkTgHit()) {
        cCcD_Obj* obj = mSph.GetTgHitObj();
        if (obj) {
            bool play_sound = true;
            fopAc_ac_c* actor = obj->GetAc();
            if (fopAcM_GetName(actor) == PROC_ALINK) {
                dCcD_GObjInf* gobj = mSph.GetTgHitGObj();
                if (gobj->GetAtType() & AT_TYPE_NORMAL_SWORD && mTgHit != 0) {
                    play_sound = false;
                }
            }

            if (play_sound) {
                u32 se_id = mSph.GetTgHitObjHitSeID(1);
                mSound.startCollisionSE(se_id, 9, NULL);
            }
        }
    } else {
        mTgHit = 0;
    }

    mSound.framework(0, dComIfGp_getReverb(fopAcM_GetRoomNo(this)));
    setBaseMtx();

    cXyz pos = current.pos;
    if (mType == 0) {
        mSph.SetR(90.0f);
        pos.z += 70.0f;
    } else {
        mSph.SetR(60.0f);
        pos.y -= 200.0f;
    }

    mSph.SetC(pos);
    dComIfG_Ccsp()->Set(&mSph);

    pointLightProc();

    return TRUE;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daLv3Candle_c::Execute() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Candle/d_a_obj_lv3Candle/Execute__13daLv3Candle_cFv.s"
}
#pragma pop
#endif

/* 80C582FC-80C583A0 00091C 00A4+00 1/1 0/0 0/0 .text            Draw__13daLv3Candle_cFv */
int daLv3Candle_c::Draw() {
    g_env_light.settingTevStruct(0x10, &current.pos, &tevStr);
    g_env_light.setLightTevColorType_MAJI(mpModel, &tevStr);

    dComIfGd_setListBG();
    mDoExt_modelUpdateDL(mpModel);
    dComIfGd_setList();

    return TRUE;
}

/* 80C583A0-80C58404 0009C0 0064+00 1/1 0/0 0/0 .text            Delete__13daLv3Candle_cFv */
int daLv3Candle_c::Delete() {
    mSound.deleteObject();
    dComIfG_resDelete(&mPhaseReq, l_resNameIdx[mType]);

    if (mIsLit) {
        dKy_plight_cut(&mLight);
    }
    return TRUE;
}

/* 80C58404-80C58424 000A24 0020+00 1/0 0/0 0/0 .text            daLv3Candle_Draw__FP13daLv3Candle_c
 */
static int daLv3Candle_Draw(daLv3Candle_c* i_this) {
    return static_cast<daLv3Candle_c*>(i_this)->Draw();
}

/* 80C58424-80C58444 000A44 0020+00 1/0 0/0 0/0 .text daLv3Candle_Execute__FP13daLv3Candle_c */
static int daLv3Candle_Execute(daLv3Candle_c* i_this) {
    return static_cast<daLv3Candle_c*>(i_this)->Execute();
}

/* 80C58444-80C58464 000A64 0020+00 1/0 0/0 0/0 .text daLv3Candle_Delete__FP13daLv3Candle_c */
static int daLv3Candle_Delete(daLv3Candle_c* i_this) {
    return static_cast<daLv3Candle_c*>(i_this)->Delete();
}

/* 80C58464-80C58484 000A84 0020+00 1/0 0/0 0/0 .text            daLv3Candle_Create__FP10fopAc_ac_c
 */
static int daLv3Candle_Create(fopAc_ac_c* i_this) {
    return static_cast<daLv3Candle_c*>(i_this)->create();
}

/* 80C58484-80C584E0 000AA4 005C+00 2/1 0/0 0/0 .text            __dt__17daLv3Candle_HIO_cFv */
daLv3Candle_HIO_c::~daLv3Candle_HIO_c() {}
